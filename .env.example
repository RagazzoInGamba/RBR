#═══════════════════════════════════════════════════════════════
# Oracle Red Bull Racing - Meal Booking Platform
# Environment Variables Template
#
# IMPORTANT:
# - Copia questo file in .env.local per development
# - NON committare .env.local in git (già in .gitignore)
# - Modifica i valori secondo il tuo ambiente
# - Per production, usa variabili d'ambiente del cloud provider
#═══════════════════════════════════════════════════════════════

#───────────────────────────────────────────────────────────────
# Application
#───────────────────────────────────────────────────────────────
NODE_ENV=development
# Options: development | production | test

#───────────────────────────────────────────────────────────────
# Database - PostgreSQL 16
#───────────────────────────────────────────────────────────────
# Format: postgresql://USER:PASSWORD@HOST:PORT/DATABASE
DATABASE_URL=postgresql://rbr_user:rbr_password@localhost:5434/rbr_meals

# Development (Docker)
# DATABASE_URL=postgresql://rbr_user:rbr_password@rbr-postgres:5432/rbr_meals

# Production (Cloud - example)
# DATABASE_URL=postgresql://user:password@your-db-host:5432/rbr_meals?schema=public&sslmode=require

# Connection Pool (optional - Prisma defaults)
DATABASE_POOL_MIN=2
DATABASE_POOL_MAX=10
DATABASE_POOL_TIMEOUT=20000

#───────────────────────────────────────────────────────────────
# NextAuth v5 - Authentication
#───────────────────────────────────────────────────────────────
# Public URL (browser access)
NEXTAUTH_URL=http://localhost:3001

# Secret for JWT signing and encryption
# CRITICAL: MUST be different in production!
# Generate with: openssl rand -base64 32
NEXTAUTH_SECRET=YOUR_SECRET_HERE_GENERATE_WITH_OPENSSL_RANDOM_STRING

# Example generation:
# Run: openssl rand -base64 32
# Output: Kv+5nV8rF2pQ9wX3yH7mA1bC4dE6fG8hI0jK2lM4nP6qR8sT0u

#───────────────────────────────────────────────────────────────
# Redis - Caching & Rate Limiting
#───────────────────────────────────────────────────────────────
# Option 1: Redis URL (recommended)
REDIS_URL=redis://localhost:6381

# Option 2: Individual parameters (fallback)
REDIS_HOST=localhost
REDIS_PORT=6381
REDIS_PASSWORD=

# Development (Docker internal)
# REDIS_URL=redis://rbr-redis:6379

# Production (Cloud - example with password)
# REDIS_URL=redis://:your-password@your-redis-host:6379

#───────────────────────────────────────────────────────────────
# Rate Limiting Configuration
#───────────────────────────────────────────────────────────────
# Global rate limit (applies to most endpoints)
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_WINDOW=60
# Window in seconds (60 = 1 minute)

# Login endpoint rate limit (stricter)
RATE_LIMIT_LOGIN_MAX=5
# Max 5 login attempts per minute per IP

#───────────────────────────────────────────────────────────────
# MinIO S3 - Object Storage (Images, Files)
#───────────────────────────────────────────────────────────────
# Internal endpoint (server-to-server, Docker network)
MINIO_ENDPOINT=rbr-minio
MINIO_PORT=9000

# Credentials (CHANGE IN PRODUCTION!)
MINIO_ACCESS_KEY=rbr_admin
MINIO_SECRET_KEY=rbr_admin_2024

# Bucket Configuration
MINIO_BUCKET=rbr-meals
MINIO_REGION=us-east-1
MINIO_USE_SSL=false

# Development (localhost access)
# MINIO_ENDPOINT=localhost
# MINIO_PORT=9004

# Production (S3 compatible service)
# MINIO_ENDPOINT=s3.amazonaws.com
# MINIO_PORT=443
# MINIO_USE_SSL=true
# MINIO_ACCESS_KEY=YOUR_AWS_ACCESS_KEY
# MINIO_SECRET_KEY=YOUR_AWS_SECRET_KEY
# MINIO_BUCKET=redbull-meals-prod

#───────────────────────────────────────────────────────────────
# Logging - Winston
#───────────────────────────────────────────────────────────────
# Log level: debug | info | warn | error
LOG_LEVEL=debug
# Use 'debug' in dev, 'info' or 'warn' in production

# Log file path (optional)
LOG_FILE_PATH=./logs/app.log
LOG_MAX_SIZE=10m
LOG_MAX_FILES=7

#───────────────────────────────────────────────────────────────
# CORS - Cross-Origin Resource Sharing
#───────────────────────────────────────────────────────────────
# Comma-separated list of allowed origins
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001

# Production example:
# CORS_ALLOWED_ORIGINS=https://meals.redbullracing.com,https://app.redbullracing.com

#───────────────────────────────────────────────────────────────
# Feature Flags (Enable/Disable Features)
#───────────────────────────────────────────────────────────────
ENABLE_AUDIT_LOGGING=true
ENABLE_RATE_LIMITING=true
ENABLE_IMAGE_UPLOAD=true
ENABLE_PAYMENT_GATEWAYS=false

#───────────────────────────────────────────────────────────────
# Email (Optional - Future Implementation)
#───────────────────────────────────────────────────────────────
# SMTP Configuration for sending emails
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_SECURE=false
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-password
# SMTP_FROM=noreply@redbullracing.com
# SMTP_FROM_NAME=Red Bull Racing Meals

#───────────────────────────────────────────────────────────────
# Monitoring - Sentry (Optional)
#───────────────────────────────────────────────────────────────
# Error tracking and performance monitoring
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
# SENTRY_ENV=development
# SENTRY_TRACES_SAMPLE_RATE=0.1
# SENTRY_PROFILES_SAMPLE_RATE=0.1

#───────────────────────────────────────────────────────────────
# Payment Gateway (Optional - Future Implementation)
#───────────────────────────────────────────────────────────────
# Stripe Integration
# STRIPE_PUBLIC_KEY=pk_test_your_public_key
# STRIPE_SECRET_KEY=sk_test_your_secret_key
# STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# PayPal Integration
# PAYPAL_CLIENT_ID=your_client_id
# PAYPAL_CLIENT_SECRET=your_client_secret
# PAYPAL_MODE=sandbox

#───────────────────────────────────────────────────────────────
# Analytics (Optional)
#───────────────────────────────────────────────────────────────
# Google Analytics
# NEXT_PUBLIC_GA_TRACKING_ID=G-XXXXXXXXXX

# Hotjar
# NEXT_PUBLIC_HOTJAR_ID=1234567
# NEXT_PUBLIC_HOTJAR_VERSION=6

#───────────────────────────────────────────────────────────────
# Development & Debug
#───────────────────────────────────────────────────────────────
# Enable debug mode (verbose logging)
DEBUG_MODE=false

# Use mock data instead of real API calls
MOCK_DATA=false

# Disable authentication (DANGER: DEV ONLY!)
DISABLE_AUTH=false

# Show React Query Devtools
NEXT_PUBLIC_ENABLE_REACT_QUERY_DEVTOOLS=true

#───────────────────────────────────────────────────────────────
# Container Ports (Docker Compose)
#───────────────────────────────────────────────────────────────
# These are used by docker-compose.yml
# Uncomment and modify if you need different ports

# APP_PORT=3001
# POSTGRES_PORT=5434
# REDIS_PORT=6381
# MINIO_PORT=9004
# MINIO_CONSOLE_PORT=9005
# PGADMIN_PORT=8082
# NGINX_PORT=8081
# NGINX_SSL_PORT=8443
# PORTAINER_PORT=9100

#═══════════════════════════════════════════════════════════════
# NOTES
#═══════════════════════════════════════════════════════════════
#
# 1. Security Best Practices:
#    - Never commit .env.local or .env.production to git
#    - Use strong, unique passwords for all services
#    - Rotate secrets regularly in production
#    - Use environment variable secrets in cloud (AWS Secrets Manager, etc.)
#
# 2. Docker vs Production:
#    - Docker uses internal network names (rbr-postgres, rbr-redis)
#    - Production uses external hostnames/IPs
#    - Adjust DATABASE_URL and REDIS_URL accordingly
#
# 3. Required Variables (Minimum to run):
#    - DATABASE_URL
#    - NEXTAUTH_URL
#    - NEXTAUTH_SECRET
#    - REDIS_URL (or REDIS_HOST + REDIS_PORT)
#
# 4. Optional but Recommended:
#    - MINIO_* (for image uploads)
#    - LOG_LEVEL (for debugging)
#    - RATE_LIMIT_* (for security)
#
# 5. Quick Start:
#    cp .env.example .env.local
#    # Edit .env.local with your values
#    # Generate NEXTAUTH_SECRET: openssl rand -base64 32
#    docker-compose up -d
#    npm run dev
#
#═══════════════════════════════════════════════════════════════
