services:
  # PostgreSQL Database (Enterprise-grade configuration)
  postgres:
    image: postgres:16-alpine
    container_name: rbr-postgres
    environment:
      POSTGRES_USER: rbr_user
      POSTGRES_PASSWORD: rbr_password
      POSTGRES_DB: rbr_meals
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rbr_user -d rbr_meals"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    command:
      - "postgres"
      - "-c"
      - "max_connections=200"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "effective_cache_size=1GB"
      - "-c"
      - "maintenance_work_mem=64MB"
      - "-c"
      - "checkpoint_completion_target=0.9"
      - "-c"
      - "wal_buffers=16MB"
      - "-c"
      - "default_statistics_target=100"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "effective_io_concurrency=200"
      - "-c"
      - "work_mem=1310kB"
    networks:
      - rbr-network

  # Redis Cache & Sessions
  redis:
    image: redis:7-alpine
    container_name: rbr-redis
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - rbr-network

  # MinIO S3-Compatible Storage
  minio:
    image: minio/minio:latest
    container_name: rbr-minio
    ports:
      - "9004:9000"
      - "9005:9001"
    environment:
      MINIO_ROOT_USER: rbr_admin
      MINIO_ROOT_PASSWORD: rbr_admin_2024
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - rbr-network

  # Next.js Application (Production Build)
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: rbr-app
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://rbr_user:rbr_password@postgres:5432/rbr_meals
      - REDIS_URL=redis://redis:6379
      # NextAuth v5 uses AUTH_SECRET and AUTH_URL (not NEXTAUTH_*)
      - AUTH_SECRET=${AUTH_SECRET}
      - AUTH_URL=${AUTH_URL:-http://localhost:3001}
      # Backward compatibility
      - NEXTAUTH_URL=http://localhost:3001
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=rbr_admin
      - MINIO_SECRET_KEY=rbr_admin_2024
      - MINIO_BUCKET=rbr-meals
      - MINIO_USE_SSL=false
      - NEXT_PUBLIC_APP_URL=http://localhost:3001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - rbr-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: rbr-nginx
    ports:
      - "8081:80"
      - "8443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    networks:
      - rbr-network

  # PgAdmin (Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: rbr-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@redbullracing.com
      PGADMIN_DEFAULT_PASSWORD: Admin123!
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "8082:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/postgres/servers.json:/pgadmin4/servers.json:ro
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/misc/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - rbr-network

  # Portainer (Container Management UI)
  portainer:
    image: portainer/portainer-ce:latest
    container_name: rbr-portainer
    command: -H unix:///var/run/docker.sock
    ports:
      - "9100:9000"
      - "9101:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9000/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    networks:
      - rbr-network

volumes:
  postgres_data:
    driver: local
    name: rbr_postgres_data
  redis_data:
    driver: local
    name: rbr_redis_data
  minio_data:
    driver: local
    name: rbr_minio_data
  pgadmin_data:
    driver: local
    name: rbr_pgadmin_data
  portainer_data:
    driver: local
    name: rbr_portainer_data

networks:
  rbr-network:
    driver: bridge
    name: rbr_network
